mmdebstrap:
  packages:
    - cloud-init  # This provides firstboot functionality
  customize-hooks:
    # Create firstboot script handler
    - |
      mkdir -p $1/etc/systemd/system
      cat > $1/etc/systemd/system/rpi-firstboot.service << 'EOF'
      [Unit]
      Description=Raspberry Pi first boot setup
      After=network-online.target
      Wants=network-online.target

      [Service]
      Type=oneshot
      ExecStart=/usr/lib/raspi-config/init_resize.sh
      ExecStart=/boot/firmware/firstrun.sh
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target
      EOF
    - |
      mkdir -p $1/boot/firmware
      cat > $1/boot/firmware/firstrun.sh << 'EOF'
      #!/bin/bash
      # This script will run the first time the system boots
      # Raspberry Pi Imager will customize this file
      
      set -e
      
      CONFIG_FILE="/boot/firmware/imager_config.txt"
      if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
      fi
      
      # Setting up WiFi if configured
      if [ -n "$WIFI_SSID" ] && [ -n "$WIFI_PASSWORD" ]; then
        cat > /etc/wpa_supplicant/wpa_supplicant.conf << WPAEOF
      ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
      update_config=1
      country=${WIFI_COUNTRY:-US}
      
      network={
        ssid="$WIFI_SSID"
        psk="$WIFI_PASSWORD"
        key_mgmt=WPA-PSK
      }
      WPAEOF
      fi
      
      # Enable SSH if requested
      if [ "$SSH_ENABLED" = "1" ]; then
        systemctl enable ssh
      fi
      
      # Set hostname if provided
      if [ -n "$HOSTNAME" ]; then
        echo "$HOSTNAME" > /etc/hostname
        sed -i "s/127.0.1.1.*raspberry/127.0.1.1\t$HOSTNAME/g" /etc/hosts
      fi
      
      # Set username and password if provided
      if [ -n "$USERNAME" ] && [ -n "$PASSWORD" ]; then
        useradd -m -s /bin/bash "$USERNAME"
        echo "$USERNAME:$PASSWORD" | chpasswd
        usermod -aG sudo "$USERNAME"
      fi
      
      # Self-destruct
      rm -f "$CONFIG_FILE" 
      rm -f "$0"
      
      exit 0
      EOF
    - chmod +x $1/boot/firmware/firstrun.sh
    - systemctl enable rpi-firstboot.service --root=$1